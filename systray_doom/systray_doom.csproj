<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <!--
      TODO: can we go to lower versions of Windows? We only set this to allow
      access to the DispatcherQueue APIs in NativeMethods.txt.
    -->
    <TargetFramework>net8.0-windows10.0.17763.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>

    <!--
      The Shell_NotifyIcon APIs are platform-specific (and don't support the
      AnyCpu build). So specify a specific platform target here. We then kick
      off another build later for x86.

      https://github.com/microsoft/CsWin32/discussions/592
    -->
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>

  <!--
    Kick off another build for x86.

    https://stackoverflow.com/a/1580825/788168
  -->
  <Target Name="AfterBuild">
    <MSBuild Condition=" '$(Platform)' == 'x86' " Projects="$(MSBuildProjectFile)" Properties="Platform=x64;PlatFormTarget=x64" RunEachTargetSeparately="true" />
  </Target>

  <!-- Build Rust -->
  <Target Name="BuildRustBindings" BeforeTargets="Build">
    <Exec Command="cargo build --manifest-path ../rust_bindings/Cargo.toml" />
    <Copy SourceFiles="../rust_bindings/target/debug/systray_doom_bindings.dll" DestinationFolder="$(OutputPath)" />
  </Target>

  <ItemGroup>
    <PackageReference Include="crayon" Version="2.0.69" />
    <PackageReference Include="Microsoft.Windows.CsWin32" Version="0.3.106">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Systray\Systray.csproj" />
  </ItemGroup>
</Project>
